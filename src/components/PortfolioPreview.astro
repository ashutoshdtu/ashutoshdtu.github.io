---
import "animate.css";
import type { CollectionEntry } from "astro:content";
interface Props {
	project: CollectionEntry<"work">;
}

const { data, slug } = Astro.props.project;

// Your array of background images
const bgImages = ["stock-2.jpg", "stock-3.jpg", "stock-4.jpg"];
const randomBgImage =
	"/assets/card-backgrounds/" +
	bgImages[Math.floor(Math.random() * bgImages.length)];
---

<a
	class="card"
	style={`background-image: url(${randomBgImage})`}
	href={`/work/${slug}`}
>
	<!-- <a class="card" href={`/work/${slug}`}> -->
	<span class="title animate__animated animate__fadeInDown">{data.title}</span
	>
	<span class="description">{data.description} - {data.boxShadow}</span>
	{
		data.img && (
			<img
				class={`floating-img animate__animated animate__fadeInRight ${
					data.boxShadow !== false ? "with-shadow" : ""
				}`}
				src={data.img}
				alt={data.img_alt || ""}
				loading="lazy"
				decoding="async"
			/>
		)
	}
</a>

<style>
	.card {
		position: relative; /* Add relative positioning */
		display: grid;
		grid-template: auto 1fr / auto 1fr;
		height: 17rem;
		background: var(--gradient-subtle);
		border: 1px solid var(--gray-800);
		border-radius: 0.75rem;
		overflow: hidden;
		box-shadow: var(--shadow-sm);
		text-decoration: none;
		font-family: var(--font-brand);
		font-size: var(--text-lg);
		font-weight: 500;
		transition: box-shadow var(--theme-transition);
		background-position: center;
		background-repeat: no-repeat;
		background-size: cover;
	}

	.card:hover {
		box-shadow: var(--shadow-md);
	}

	.title {
		grid-area: 1 / 1 / 2 / 2;
		z-index: 2;
		margin: 0.5rem;
		padding: 0.5rem 1rem;
		background: var(--gray-999);
		color: var(--gray-200);
		border-radius: 0.375rem;
		overflow: hidden; /* Ensure the content that is too wide to fit into box is hidden */
		text-overflow: ellipsis; /* Render an ellipsis (...) to represent the clipped text */
		white-space: nowrap; /* Sequences of whitespace are collapsed */
		transition: transform var(--theme-transition);
	}

	.description {
		position: absolute;
		bottom: 0;
		left: 0;
		width: 100%;
		padding: 0.5rem 1rem;
		background: hsla(
			var(--gray-999-basis),
			0.8
		); /* Add some transparency to the background */
		color: var(--gray-200);
		font-size: var(--text-md);
		opacity: 0; /* Initially hidden */
		transition: opacity var(--theme-transition);
		transform: translateY(100%); /* Initially push it down */
		transition: transform var(--theme-transition),
			opacity var(--theme-transition);
		z-index: 2;
	}

	.floating-img {
		position: absolute;
		top: 4rem; /* Set top padding */
		right: 0rem; /* Set min right padding */
		width: auto;
		height: auto;
		max-width: 90%; /* Modify as per requirements */
		object-fit: cover;
		z-index: 1;
		overflow: hidden;
		/* transition: max-width var(--theme-transition); */
	}

	.floating-img.with-shadow {
		box-shadow: var(--shadow-xl);
		transition: box-shadow var(--theme-transition);
	}

	img {
		grid-area: 1 / 1 / 3 / 3;
		width: 100%;
		height: 100%;
		object-fit: cover;
	}

	@media (min-width: 50em) {
		.title {
			border-radius: 0.9375rem;
		}

		.card {
			height: auto; /* We set this to auto so it adjusts according to the width */
			aspect-ratio: 1.73 / 1; /* This defines the aspect ratio, width to height */
			border-radius: 1.5rem;
		}

		.card:hover .description {
			opacity: 1; /* Shown on hover */
			transform: translateY(0); /* Slide up on hover */
		}

		.card:hover .floating-img {
			/* max-width: 100%; */
			/* transition: max-width var(--theme-transition); */
		}

		.card:hover .floating-img.with-shadow {
			box-shadow: none;
		}
	}
</style>
